{"version":3,"sources":["components/Searchfetch.js","components/Title.js","reportWebVitals.js","components/Ads.js","index.js"],"names":["stringFormat","string","undefined","charAt","toUpperCase","slice","toLowerCase","Searchfetch","useState","error","setError","isLoaded","setIsLoaded","modalData","setModalData","modalLoading","setModalLoading","noData","setNoData","chips","setChips","port","window","location","hostname","baseurl","protocol","useEffect","a","fetch","then","res","ok","json","result","console","table","message","rawdata","elems","document","querySelectorAll","M","Chips","init","placeholder","secondaryPlaceholder","autocompleteOptions","data","limit","minLength","onChipSelect","e","chip","forEach","style","onChipAdd","length","node","querySelector","setAttribute","remove","text","innerText","split","btoa","String","fromCharCode","apply","removeAttribute","toast","html","img","classList","add","innerHTML","onChipDelete","modal","Modal","collapsible","Collapsible","fetchData","className","onClick","query","url","status","statusText","catch","err","href","id","border","boxShadow","color","highlightColor","count","height","map","item","i","icon","l","date","Date","now","gameType","mode","ended","type","replace","title","diff","dhrs","Math","floor","dmin","dsec","duration","formattedmode","fdate","fend","alt","src","toLocaleTimeString","toLocaleDateString","toString","Google","client","slot","display","layout","format","responsive","Title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Ads","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.46752343.chunk.js","sourcesContent":["import M from 'materialize-css'\r\nimport AdSense from 'react-adsense';\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\nfunction stringFormat(string)\r\n{\r\n    if(string === undefined) return string\r\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n}\r\nfunction Searchfetch()\r\n{\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [modalData, setModalData] = useState(null);\r\n    const [modalLoading, setModalLoading] = useState(false);\r\n    const [noData, setNoData] = useState(null);\r\n    const [chips, setChips] = useState(0);\r\n\r\n    const port = window.location.hostname === 'localhost' ? ':8080' : '';\r\n    const baseurl = `${window.location.protocol}//${window.location.hostname}${port}/api/v1/`\r\n    // Note: the empty deps array [] means\r\n    // this useEffect will run once\r\n    // similar to componentDidMount()\r\n    useEffect(() => {\r\n        async function fetchData()\r\n        {\r\n            const rawdata = await fetch(`${baseurl}searches`)\r\n            .then(res =>\r\n                {\r\n                    if(!res.ok) return {\"error\": \"Too many requests\"}\r\n                    return res.json();\r\n                })\r\n            .then((result) => {\r\n                if(result['error']) return setError('Cannot connect to DB')\r\n                setIsLoaded(true);\r\n                return result;\r\n            },\r\n            (error) => {\r\n                console.table(error)\r\n                setIsLoaded(true);\r\n                setError(error.message);\r\n            })\r\n\r\n            fetch(`${baseurl}reaction`).then(res=>res.json()).then(res=>{setNoData(res)});\r\n            \r\n\r\n            const elems = document.querySelectorAll('.chips');\r\n            M.Chips.init(elems, {\r\n                placeholder: \"Name / UUID\",\r\n                secondaryPlaceholder: \"+ 1 more\",\r\n                autocompleteOptions: {\r\n                    data: rawdata,\r\n                    limit: 5,\r\n                    minLength: 1\r\n                },\r\n                onChipSelect: async (e, chip) =>\r\n                {\r\n                    const chips = document.querySelectorAll('.chip')\r\n                    chips.forEach(chip=>chip.style = '')\r\n                    chip.style = 'background-color: #4f4f5c'\r\n                },\r\n                onChipAdd: async (e, chip)=>\r\n                {\r\n                    chip.style = ''\r\n                    const chips = document.querySelectorAll('.chip').length;\r\n                    const node = document.querySelectorAll('.chip')[chips-1];\r\n\r\n                    if(chips >= 2)\r\n                    {\r\n                        e[0].querySelector('input').setAttribute('disabled', '');\r\n                        e[0].querySelector('input').setAttribute('style', 'height: 0;width: 0;display: flex;');\r\n                    }\r\n                    if(chips >= 3) return node.remove();\r\n\r\n                    const text = chip.innerText.split('\\n')[0];\r\n                    const data = rawdata[text] !== undefined ? rawdata[text] : \r\n                    await fetch(`${window.location.protocol}//${window.location.hostname}${port}/api/v1/head/${text}`)\r\n                    .then(res=>res.json())\r\n                    .then(res=>\r\n                    {\r\n                        if(res['error']) return res;\r\n                        const b64encoded = btoa(String.fromCharCode.apply(null, res['blob']['data']));\r\n                        return \"data:image/jpg;base64,\" + b64encoded\r\n                    })\r\n\r\n                    if(!data)\r\n                    {\r\n                        e[0].querySelector('input').removeAttribute('disabled', '');\r\n                        e[0].querySelector('input').removeAttribute('style', '');\r\n                        return node.remove();\r\n                    }\r\n                    if(data['error'])\r\n                    {\r\n                        e[0].querySelector('input').removeAttribute('disabled', '');\r\n                        e[0].querySelector('input').removeAttribute('style', '');\r\n                        window.M.toast({html: `This account does not exist`});\r\n                        return node.remove();\r\n                    }\r\n                    const img = `<img src=\"${data}\"/>`\r\n\r\n                    node.classList.add('waves-effect');\r\n                    node.classList.add('waves-light');\r\n                    node.innerHTML += img;\r\n                },\r\n                onChipDelete: async (e, chip) =>\r\n                {\r\n                    const chips = document.querySelectorAll('.chip').length;\r\n\r\n                    if(chips <= 2)\r\n                    {\r\n                        e[0].querySelector('input').removeAttribute('disabled', '');\r\n                        e[0].querySelector('input').removeAttribute('style', '');\r\n                    }\r\n                }\r\n            });\r\n            const modal = document.querySelectorAll('.modal');\r\n            M.Modal.init(modal, {});\r\n            const collapsible = document.querySelectorAll('.collapsible');\r\n            M.Collapsible.init(collapsible, {});\r\n        }\r\n\r\n        fetchData();\r\n\r\n    }, [baseurl])\r\n\r\n    const toggleState = () =>\r\n    {\r\n        setChips(document.querySelectorAll('.chip').length);\r\n        setModalData(true);\r\n        const chips = document.querySelectorAll('.chip')\r\n        let query = ``\r\n        // Get the user input\r\n        chips.forEach(chip=>\r\n        {\r\n            const text = chip.innerText.split('\\n')[0]\r\n            query += `/${text}`\r\n        })\r\n        // Building url\r\n        setModalLoading(true);\r\n        const url = `${baseurl}player${query}`;\r\n        fetch(url).then(res=>{\r\n            if(res.ok) return res.json();\r\n            M.toast({html: `HTTP ${res.status} ${res.statusText}`});\r\n        }).then(res=>{\r\n            setModalData(res)\r\n            setModalLoading(false);\r\n        }).catch(err=>\r\n        {\r\n            M.toast({html: `${err}`})\r\n        })\r\n    }\r\n\r\n    const renderRes = () =>\r\n    {\r\n        if(modalLoading)\r\n        {\r\n            return(\r\n                <ul className=\"collapsible\" style={{border: 0,boxShadow: \"none\"}}>\r\n                    <SkeletonTheme color=\"#202020\" highlightColor=\"#444\">\r\n                        <Skeleton count={4} height={45}/>\r\n                    </SkeletonTheme>\r\n                </ul>\r\n            )\r\n        }else if(!modalData || !modalData[0])\r\n        {\r\n            return(\r\n                <ul className=\"collapsible\" style={{border: 0,boxShadow: \"none\"}}>\r\n                    <h1 className=\"col s12 center\">{ noData ? noData['face'] : '.-.'}</h1>\r\n                    <p className=\"center\">{ noData ? noData['reaction'] : 'huh'}</p>\r\n                </ul>\r\n            )\r\n        }\r\n        return(\r\n            <ul className=\"collapsible\">\r\n                {\r\n                    modalData.map((item, i)=>\r\n                    {\r\n                        // Rendering icon based on indexing\r\n                        const icon = () =>\r\n                        {\r\n                            switch(i)\r\n                            {\r\n                                case 0:\r\n                                return <span className=\"valign-wrapper\"><i key={-1} className=\"material-icons\">fiber_manual_record</i> Currently playing...</span>\r\n                                case 1:\r\n                                return <span><i key={-1} className=\"material-icons\">king_bed</i> Bedwars</span>\r\n                                case 2:\r\n                                return <span><i key={-2} className=\"material-icons\">smart_toy</i> Arcade</span>\r\n                                case 3:\r\n                                return <span><i key={-3} className=\"material-icons\">feed</i> Other</span>\r\n                                default:\r\n                                return <i key={i}>{noData ? noData['face'] : '.-.'}</i>\r\n                            }\r\n                        }\r\n                        return(\r\n                            <li key={i.toString()}>\r\n                                <div className=\"collapsible-header\">\r\n                                    {icon()}\r\n                                    <span className=\"badge\">{item.length}</span>\r\n                                </div>\r\n                                <div className=\"collapsible-body\">\r\n                                    {item.length === 0 ? \r\n                                    <span>\r\n                                        <h1 className=\"col s12 center\">{ noData ? noData['face'] : '.-.'}</h1>\r\n                                        <p className=\"center\">{ noData ? noData['reaction'] : 'huh'}</p>\r\n                                    </span> : ''}\r\n                                    {\r\n                                        item.map((item, l)=>\r\n                                        {\r\n                                            const {\r\n                                                date = Date.now(), \r\n                                                gameType = \"oop Something happened\", \r\n                                                mode = \"oop Something happened\", \r\n                                                map = \"oop Something happened\", \r\n                                                ended = Date.now()\r\n                                            } = item;\r\n                                            const type = gameType !== undefined ? stringFormat(gameType.replace('_', ' ')) : undefined;\r\n                                            const title = item['active'] ? `${item['name']}` : (map ? map : type);\r\n                                            // Date calculations\r\n                                            const diff = (ended - date) / 1000;\r\n                                            const dhrs = Math.floor((diff / 3600 ) % 24);\r\n                                            const dmin = Math.floor((diff / 60 ) % 60);\r\n                                            const dsec = Math.floor(diff % 60);\r\n                                            // Date formating\r\n                                            const duration = `${dhrs ? `${dhrs}hr${dhrs>1?'s':''}` : ''} \r\n                                            ${dmin ? `${dmin}min${dmin>1?'s':''}` : ''} \r\n                                            ${dsec ? `${dsec}sec${dsec>1?'s':''}` : ''}`\r\n\r\n                                            // Bedwars modes fomatting\r\n                                            const formattedmode = () =>\r\n                                            {\r\n                                                const formatting = item['active'] ? \r\n                                                (item['active']['mode'] ? item['active']['mode'] : (item['active']['online'] ? \"Online\" : \"Offline\")) : mode; \r\n                                                switch(formatting)\r\n                                                {\r\n                                                    case \"Online\": return \"Online\";\r\n                                                    case \"Offline\": return \"Offline\";\r\n                                                    case \"EIGHT_ONE\": return `1v1v1v1...`;\r\n                                                    case \"EIGHT_TWO\": return `2v2v2v2...`;\r\n                                                    case \"FOUR_THREE\": return `3v3v3v3`;\r\n                                                    case \"THREE_FOUR\": return `4v4v4`;\r\n                                                    case \"FOUR_FOUR\": return `4v4v4v4`;\r\n                                                    case \"LOBBY\": return \"Lobby\";\r\n                                                    case \"PIT\": return \"Pit\";\r\n                                                    case \"TWO_V_TWO\": return \"2v2\";\r\n                                                    case \"CTF\": return \"Capture the Flag\";\r\n                                                    case \"TDM\": return \"Team Death Match\";\r\n                                                    case \"SOLO\": return \"Smash Heros\";\r\n                                                    case \"DOM\": return \"Dominate\";\r\n                                                    case \"PARTY\": case null: return \"\";\r\n                                                    case \"solo_normal\": return \"Skywars Solo Normal\";\r\n                                                    case \"ONE_V_JUAN\": return \"One v Juan\";\r\n                                                    case \"solo_insane\": return \"Skywars Solo Insane\";\r\n                                                    default: return 'Well, how did i get here?';\r\n                                                }\r\n                                            }\r\n                                            const fdate = new Date(date);\r\n                                            const fend = new Date(ended);\r\n                                            return (\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-image waves-effect waves-block waves-light\">\r\n                                                        {i === 1 && map ? <img alt={map} className=\"activator\" src={`imgs/bedwars/${map.replace(' ','_')}.png`} /> : ''}\r\n                                                    </div>\r\n                                                    <div className=\"card-content\">\r\n                                                    <span className=\"card-title activator\">\r\n                                                        {title}\r\n                                                        <i className=\"blue-text text-darken-1\"> {formattedmode()} </i>\r\n                                                        <i className=\"material-icons right\">more_vert</i>\r\n                                                    </span>\r\n                                                    <p>{duration}</p>\r\n                                                    </div>\r\n                                                    <div className=\"card-reveal\">\r\n                                                    <span className=\"card-title\"><i className=\"material-icons right waves-effect waves-red\">close</i></span>\r\n                                                    {\r\n                                                        i === 0 ? \r\n                                                        <span>\r\n                                                            <p>{item['active'] ? stringFormat(item['active']['gameType']) : item['active']} {formattedmode()}</p>\r\n                                                        </span>: <span>\r\n                                                            <div>\r\n\r\n                                                            </div>\r\n                                                            <table className=\"responsive-table\">\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th>{title}</th>\r\n                                                                        <th>Time</th>\r\n                                                                        <th>Date</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n\r\n                                                                <tbody>\r\n                                                                    <tr>\r\n                                                                        <td>Game Started</td>\r\n                                                                        <td>{fdate.toLocaleTimeString()}</td>\r\n                                                                        <td>{fdate.toLocaleDateString()}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Game Ended</td>\r\n                                                                        <td>{fend.toLocaleTimeString()}</td>\r\n                                                                        <td>{fend.toLocaleDateString()}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Duration</td>\r\n                                                                        <td>{duration}</td>\r\n                                                                        <td></td>\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n\r\n                                                            </table>\r\n                                                        </span>\r\n                                                    }\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                <AdSense.Google\r\n                    client=\"ca-pub-5211251535508566\"\r\n                    slot=\"7528515664\"\r\n                    style={{ display: 'block' }}\r\n                    layout='in-article'\r\n                    format='auto'\r\n                    responsive='true'\r\n                />\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    if(error)\r\n    {\r\n        return <div className=\"center\">\r\n            <h1 className=\"teal-text text-accent-3\">(´−｀)ﾝ</h1>\r\n            <h4 className=\"grey-text text-darken-1\">I don't really know what happened...</h4>\r\n            <p>Error: <span className=\"red-text text-accent-2\">{error}</span></p>\r\n        </div>;\r\n    }\r\n    if (!isLoaded) return (\r\n        <SkeletonTheme color=\"#202020\" highlightColor=\"#444\">\r\n            <Skeleton count={2} height={45}/>\r\n        </SkeletonTheme>\r\n    )\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"chips chips-autocomplete col s12\"></div>\r\n            <a onClick={toggleState} className=\"waves-effect waves-light btn col s12 modal-trigger\" href=\"#main-modal\">Search</a>\r\n            <div id=\"main-modal\" className=\"modal bottom-sheet\">\r\n                <div className=\"modal-content container\">\r\n                <a href=\"#!\" className=\"modal-close waves-effect waves-red btn-flat right\">\r\n                    <span className=\"material-icons\">close</span>\r\n                </a>\r\n                <h4>Games on Hypixel {chips > 1 ? 'Together' : ''}</h4>\r\n                {renderRes()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchfetch;","function Title()\r\n{\r\n    return(\r\n        <h1 className=\"center\">Hypixel Stats</h1>\r\n    )\r\n}\r\n\r\nexport default Title;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport AdSense from 'react-adsense';\r\n \r\n// responsive and native ads\r\nfunction Ads()\r\n{\r\n    return(\r\n        <AdSense.Google\r\n            client=\"ca-pub-5211251535508566\"\r\n            slot=\"7528515664\"\r\n            style={{ display: 'block' }}\r\n            layout='in-article'\r\n            format='auto'\r\n            responsive='true'\r\n        />\r\n    )\r\n}\r\n\r\nexport default Ads;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Searchfetch from './components/Searchfetch';\nimport Title from './components/Title';\nimport reportWebVitals from './reportWebVitals';\nimport Ads from './components/Ads';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Title />\n    <Searchfetch />\n    <Ads />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}